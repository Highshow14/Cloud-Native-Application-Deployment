version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.1

executors:
  docker-executor:
    docker:
      - image: cimg/base:2023.03
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

jobs:
  test-frontend:
    docker:
      - image: cimg/node:18.16
    steps:
      - checkout
      - restore_cache:
          keys:
            - frontend-deps-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Install dependencies
          command: cd frontend && npm ci
      - save_cache:
          key: frontend-deps-{{ checksum "frontend/package-lock.json" }}
          paths:
            - frontend/node_modules
      - run:
          name: Run tests
          command: cd frontend && npm test

  test-backend:
    docker:
      - image: cimg/node:18.16
    steps:
      - checkout
      - restore_cache:
          keys:
            - backend-deps-{{ checksum "backend/package-lock.json" }}
      - run:
          name: Install dependencies
          command: cd backend && npm ci
      - save_cache:
          key: backend-deps-{{ checksum "backend/package-lock.json" }}
          paths:
            - backend/node_modules
      - run:
          name: Run tests
          command: cd backend && npm test

  build-and-push-images:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Build and push frontend image
          command: |
            cd frontend
            docker build -t $DOCKER_USERNAME/nebulance-frontend:${CIRCLE_SHA1:0:7} -t $DOCKER_USERNAME/nebulance-frontend:latest .
            docker push $DOCKER_USERNAME/nebulance-frontend:${CIRCLE_SHA1:0:7}
            docker push $DOCKER_USERNAME/nebulance-frontend:latest
      - run:
          name: Build and push backend image
          command: |
            cd backend
            docker build -t $DOCKER_USERNAME/nebulance-backend:${CIRCLE_SHA1:0:7} -t $DOCKER_USERNAME/nebulance-backend:latest .
            docker push $DOCKER_USERNAME/nebulance-backend:${CIRCLE_SHA1:0:7}
            docker push $DOCKER_USERNAME/nebulance-backend:latest

  update-dev-values:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Install yq
          command: |
            sudo apt update && sudo apt install -y wget
            wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
            sudo chmod +x /usr/bin/yq
      - run:
          name: Update Helm values.yaml with image tags
          command: |
            yq e ".frontend.image.tag = \"${CIRCLE_SHA1:0:7}\"" -i environments/dev/values.yaml
            yq e ".backend.image.tag = \"${CIRCLE_SHA1:0:7}\"" -i environments/dev/values.yaml
      - run:
          name: Commit and push changes to Git
          command: |
            git config user.name "circleci"
            git config user.email "ci@circleci.com"
            git add environments/dev/values.yaml
            git commit -m "Update dev image tags to ${CIRCLE_SHA1:0:7} [skip ci]" || echo "No changes to commit"
            git push origin $CIRCLE_BRANCH

  update-prod-values:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Install yq
          command: |
            sudo apt update && sudo apt install -y wget
            wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
            sudo chmod +x /usr/bin/yq
      - run:
          name: Update Helm values.yaml with image tags
          command: |
            yq e ".frontend.image.tag = \"${CIRCLE_SHA1:0:7}\"" -i environments/prod/values.yaml
            yq e ".backend.image.tag = \"${CIRCLE_SHA1:0:7}\"" -i environments/prod/values.yaml
      - run:
          name: Commit and push changes to Git
          command: |
            git config user.name "circleci"
            git config user.email "ci@circleci.com"
            git add environments/prod/values.yaml
            git commit -m "Update prod image tags to ${CIRCLE_SHA1:0:7} [skip ci]" || echo "No changes to commit"
            git push origin $CIRCLE_BRANCH

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test-frontend
      - test-backend
      - build-and-push-images:
          requires:
            - test-frontend
            - test-backend
          context:
            - CLOUD-NATIVE
      - update-dev-values:
          requires:
            - build-and-push-images
          context:
            - CLOUD-NATIVE
          filters:
            branches:
              only:
                - develop
                - main
      - approve-prod-deployment:
          type: approval
          requires:
            - update-dev-values
          filters:
            branches:
              only: main
      - update-prod-values:
          requires:
            - approve-prod-deployment
          context:
            - CLOUD-NATIVE
          filters:
            branches:
              only: main
