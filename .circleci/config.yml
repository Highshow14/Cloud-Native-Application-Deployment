version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  aws-cli: circleci/aws-cli@3.1.1
  kubernetes: circleci/kubernetes@1.3.1

executors:
  docker-executor:
    docker:
      - image: cimg/base:2023.03
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

jobs:
  test-frontend:
    docker:
      - image: cimg/node:18.16
    steps:
      - checkout
      - restore_cache:
          keys:
            - frontend-deps-{{ checksum "bootcamp-project-3/frontend/package-lock.json" }}
      - run:
          name: Install dependencies
          command: cd bootcamp-project-3/frontend && npm ci
      - save_cache:
          key: frontend-deps-{{ checksum "bootcamp-project-3/frontend/package-lock.json" }}
          paths:
            - bootcamp-project-3/frontend/node_modules
      - run:
          name: Run tests
          command: cd bootcamp-project-3/frontend && npm test

  test-backend:
    docker:
      - image: cimg/node:18.16
    steps:
      - checkout
      - restore_cache:
          keys:
            - backend-deps-{{ checksum "bootcamp-project-3/backend/package-lock.json" }}
      - run:
          name: Install dependencies
          command: cd bootcamp-project-3/backend && npm ci
      - save_cache:
          key: backend-deps-{{ checksum "bootcamp-project-3/backend/package-lock.json" }}
          paths:
            - bootcamp-project-3/backend/node_modules
      - run:
          name: Run tests
          command: cd bootcamp-project-3/backend && npm test

  build-and-push-images:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Build and push frontend image
          command: |
            cd bootcamp-project-3/frontend
            docker build -t $DOCKER_USERNAME/nebulance-frontend:${CIRCLE_SHA1:0:7} -t $DOCKER_USERNAME/nebulance-frontend:latest .
            docker push $DOCKER_USERNAME/nebulance-frontend:${CIRCLE_SHA1:0:7}
            docker push $DOCKER_USERNAME/nebulance-frontend:latest
      - run:
          name: Build and push backend image
          command: |
            cd bootcamp-project-3/backend
            docker build -t $DOCKER_USERNAME/nebulance-backend:${CIRCLE_SHA1:0:7} -t $DOCKER_USERNAME/nebulance-backend:latest .
            docker push $DOCKER_USERNAME/nebulance-backend:${CIRCLE_SHA1:0:7}
            docker push $DOCKER_USERNAME/nebulance-backend:latest

  deploy-to-dev:
    executor: aws-eks/python3
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-nebulance
          aws-region: ${AWS_REGION}
      - kubernetes/install-kubectl
      - run:
          name: Install Helm
          command: |
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - run:
          name: Deploy to dev environment
          command: |
            helm upgrade --install nebulance ./helm/nebulance \
              --values ./environments/dev/values.yaml \
              --set frontend.image.tag=${CIRCLE_SHA1:0:7} \
              --set backend.image.tag=${CIRCLE_SHA1:0:7}

  deploy-to-prod:
    executor: aws-eks/python3
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-nebulance
          aws-region: ${AWS_REGION}
      - kubernetes/install-kubectl
      - run:
          name: Install Helm
          command: |
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - run:
          name: Deploy to production environment
          command: |
            helm upgrade --install nebulance ./helm/nebulance \
              --values ./environments/prod/values.yaml \
              --set frontend.image.tag=${CIRCLE_SHA1:0:7} \
              --set backend.image.tag=${CIRCLE_SHA1:0:7}

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test-frontend
      - test-backend
      - build-and-push-images:
          requires:
            - test-frontend
            - test-backend
          context:
            - CLOUD-NATIVE
      - deploy-to-dev:
          requires:
            - build-and-push-images
          context:
            - CLOUD-NATIVE
          filters:
            branches:
              only:
                - develop
                - main
      - approve-prod-deployment:
          type: approval
          requires:
            - deploy-to-dev
          filters:
            branches:
              only: main
      - deploy-to-prod:
          requires:
            - approve-prod-deployment
          context:
            - CLOUD-NATIVE
          filters:
            branches:
              only: main
