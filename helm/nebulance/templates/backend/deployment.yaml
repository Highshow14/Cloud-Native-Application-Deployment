apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}
  labels:
    app: {{ .Values.backend.name }}
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.backend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}
    spec:
      containers:
        - name: {{ .Values.backend.name }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.backend.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3000"
            - name: POSTGRES_HOST
              value: "{{ .Values.database.name }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.database.service.port }}"
            {{- if .Values.externalSecrets.enabled }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalSecrets.application.secretName }}
                  key: JWT_SECRET
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalSecrets.application.secretName }}
                  key: API_KEY
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalSecrets.database.secretName }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalSecrets.database.secretName }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalSecrets.database.secretName }}
                  key: POSTGRES_DB
            {{- end }}